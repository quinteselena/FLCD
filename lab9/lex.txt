%{
	#include<stdio.h>
	#include <string.h>
%}

%option noyywrap
%option caseless

LETTER [a-ZA-Z]
DIGIT [0-9]
NON_ZERO_DIGIT [1-9]
INTEGER [+-]?{NON_ZERO_DIGIT}{DIGIT}*
CHAR \'{LETTER}\'
STRING \"{CHAR}*\"
CONSTANT {INTEGER}|{CHAR}|{STRING}
IDENTIFIER [a-zA-Z][a-ZA-Z0-9_]*

%%

let {printf("%s - as reserved word\n", yytext);}
func {printf("%s - as reserved word\n", yytext);}
returns {printf("%s - as reserved word\n", yytext);}
is {printf("%s - as reserved word\n", yytext);}
or {printf("%s - as reserved word\n", yytext);}
and {printf("%s - as reserved word\n", yytext);}
print {printf("%s - as reserved word\n", yytext);}
while {printf("%s - as reserved word\n", yytext);}
return {printf("%s - as reserved word\n", yytext);}
if {printf("%s - as reserved word\n", yytext);}
else {printf("%s - as reserved word\n", yytext);}
then {printf("%s - as reserved word\n", yytext);}
integer {printf("%s - as reserved word\n", yytext);}
boolean {printf("%s - as reserved word\n", yytext);}
array {printf("%s - as reserved word\n", yytext);}
true {printf("%s - as reserved word\n", yytext);}
false {printf("%s - as reserved word\n", yytext);}
scan {printf("%s - as reserved word\n", yytext);}

{IDENTIFIER} printf( " - as identifier: %s\n", yytext);
{CONSTANT} printf( " - as identifier: %s\n", yytext);

\{ {printf("%s\n", yytext);}
\} {printf("%s\n", yytext);}
; {printf("%s\n", yytext);}
\( {printf("%s\n", yytext);}
\) {printf("%s\n", yytext);}
\, {printf("%s\n", yytext);}

\+ {printf("%s\n", yytext);}
\- {printf("%s\n", yytext);}
\* {printf("%s\n", yytext);}
\/ {printf("%s\n", yytext);}
\% {printf("%s\n", yytext);}
"=" {printf("%s\n", yytext);}
\== {printf("%s\n", yytext);}
\!= {printf("%s\n", yytext);}
\< {printf("%s\n", yytext);}
\> {printf("%s\n", yytext);}
\<= {printf("%s\n", yytext);}
\>= {printf("%s\n", yytext);}

%%
void main(argc, argv)
int argc;
char** argv;
{           
if (argc > 1)
{
    FILE *file;
    file = fopen(argv[1], "r");
    if (!file)
    {
        fprintf(stderr, "Could not open %s\n", argv[1]);
        exit(1);
    }
    yyin = file;
}

yylex();
}